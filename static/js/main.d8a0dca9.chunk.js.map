{"version":3,"sources":["goods.js","App.tsx","index.tsx"],"names":["App","state","selectedGoods","getTitle","lengthOfSelected","length","selectedWithoutLast","lastSelected","pop","join","this","className","type","onClick","setState","goodsFromServer","map","good","includes","filter","currentGood","concat","React","Component","ReactDOM","render","document","getElementById"],"mappings":"sOAAe,G,YAAA,CACb,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,OCAWA,EAAb,4MACEC,MAAQ,CACNC,cAAe,CAAC,QAFpB,EAKEC,SAAW,WACT,IAAMC,EAAmB,EAAKH,MAAMC,cAAcG,OAElD,IAAKD,EACH,MAAO,oBAGT,GAAyB,IAArBA,EACF,MAAM,GAAN,OAAU,EAAKH,MAAMC,cAAc,GAAnC,gBAGF,IAAMI,EAAmB,YAAO,EAAKL,MAAMC,eAErCK,EAAeD,EAAoBE,MAEzC,MAAM,GAAN,OAAUF,EAAoBG,KAAK,MAAnC,gBAAgDF,EAAhD,kBApBJ,4CAuBE,WAAU,IAAD,OACCL,EAAkBQ,KAAKT,MAAvBC,cAER,OACE,uBAAMS,UAAU,YAAhB,UACE,yBAAQA,UAAU,cAAlB,UACE,oBAAIA,UAAU,aAAd,SACID,KAAKP,aAGRD,EAAcG,OAAS,GACtB,wBACEO,KAAK,SACLD,UAAU,8BAKVE,QAAS,WACP,EAAKC,SAAS,CAAEZ,cAAe,MARnC,sBAgBJ,6BACGa,EAAgBC,KAAI,SAAAC,GACnB,OACE,qBAEEN,UAAWT,EAAcgB,SAASD,GAC9B,oBACA,OAJN,UAMGA,EAEAf,EAAcgB,SAASD,GAEpB,wBACEL,KAAK,SACLD,UAAU,kCAKVE,QAAS,WACP,EAAKC,UAAS,SAAAb,GACZ,MAAO,CACLC,cAAeD,EAAMC,cAClBiB,QAAO,SAAAC,GAAW,OAAIA,IAAgBH,UAXjD,oBAqBA,wBACEL,KAAK,SACLD,UAAU,mCAKVE,QAAS,WACP,EAAKC,UAAS,SAAAb,GACZ,MAAO,CACLC,cAAeD,EAAMC,cAClBmB,OAAO,CAACJ,SAXnB,sBA9BCA,eAtDrB,GAAyBK,IAAMC,WCP/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d8a0dca9.chunk.js","sourcesContent":["export default [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n","import React from 'react';\nimport './App.scss';\nimport 'bulma/css/bulma.min.css';\n\nimport goodsFromServer from './goods';\n\ntype State = {\n  selectedGoods: string[],\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    selectedGoods: ['Jam'],\n  };\n\n  getTitle = (): string => {\n    const lengthOfSelected = this.state.selectedGoods.length;\n\n    if (!lengthOfSelected) {\n      return 'No goods selected';\n    }\n\n    if (lengthOfSelected === 1) {\n      return `${this.state.selectedGoods[0]} is selected`;\n    }\n\n    const selectedWithoutLast = [...this.state.selectedGoods];\n\n    const lastSelected = selectedWithoutLast.pop();\n\n    return `${selectedWithoutLast.join(', ')} and ${lastSelected} are selected`;\n  };\n\n  render() {\n    const { selectedGoods } = this.state;\n\n    return (\n      <main className=\"App table\">\n        <header className=\"App__header\">\n          <h1 className=\"App__title\">\n            { this.getTitle() }\n          </h1>\n\n          {selectedGoods.length > 0 && (\n            <button\n              type=\"button\"\n              className=\"\n                App__clear\n                button\n                is-info\n              \"\n              onClick={() => {\n                this.setState({ selectedGoods: [] });\n              }}\n            >\n              Clear\n            </button>\n          )}\n        </header>\n\n        <ul>\n          {goodsFromServer.map(good => {\n            return (\n              <li\n                key={good}\n                className={selectedGoods.includes(good)\n                  ? 'Good Good--active'\n                  : 'Good'}\n              >\n                {good}\n\n                {selectedGoods.includes(good)\n                  ? (\n                    <button\n                      type=\"button\"\n                      className=\"\n                        Good__remove\n                        button\n                        is-danger\n                      \"\n                      onClick={() => {\n                        this.setState(state => {\n                          return {\n                            selectedGoods: state.selectedGoods\n                              .filter(currentGood => currentGood !== good),\n                          };\n                        });\n                      }}\n                    >\n                      Remove\n                    </button>\n                  )\n\n                  : (\n                    <button\n                      type=\"button\"\n                      className=\"\n                        Good__select\n                        button\n                        is-success\n                      \"\n                      onClick={() => {\n                        this.setState(state => {\n                          return {\n                            selectedGoods: state.selectedGoods\n                              .concat([good]),\n                          };\n                        });\n                      }}\n                    >\n                      Select\n                    </button>\n                  )}\n              </li>\n            );\n          })}\n        </ul>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}